{"ast":null,"code":"var _jsxFileName = \"/Users/babulia/Desktop/\\u0443\\u043B\\u044F\\u043D\\u0430 \\u043A\\u043E\\u0434\\u0443\\u0454/tic-tac-toe-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { Routes, Route } from \"react-router-dom\";\n\nimport \"../src/App.css\";\nimport Button from \"./components/Button/Button\";\nimport Box from \"./components/Box/Box\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [current, setCurrent] = useState(\"X\");\n  const [winner, setWinner] = useState();\n  const [state, setState] = useState([undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined]); // const toggleCurrent = () =>\n  //   setCurrent((prevCurrent) => (prevCurrent === \"X\" ? \"O\" : \"X\"));\n  // const createPPHandler = (index) => () => {\n  //   setState((prevState) => {\n  //     if (winner || !state.includes(undefined)) {\n  //       return prevState;\n  //     }\n  //     const newState = [...prevState];\n  //     newState[index] = current;\n  //     toggleCurrent();\n  //     return newState;\n  //   });\n  // };\n  // const createCCHandler = () => () => {\n  //   setState((prevState) => {\n  //     const newState = [...prevState];\n  //     const availableBoxes = newState\n  //       .map((value, index) => ({ value, index }))\n  //       .filter(({ value }) => value === undefined);\n  //     if (winner || !availableBoxes.length) {\n  //       return prevState;\n  //     }\n  //     const randomIndex = getRandomNumberTo(availableBoxes.length - 1);\n  //     const superIndex = availableBoxes[randomIndex].index;\n  //     newState[superIndex] = current;\n  //     toggleCurrent();\n  //     return newState;\n  //   });\n  // };\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     createCCHandler()();\n  //   }, 500);\n  //   return () => clearInterval(interval);\n  // }, [createCCHandler]);\n\n  const createPCHandler = useCallback(index => () => {\n    setState(prevState => {\n      const newState = [...prevState];\n      newState[index] = \"X\";\n      const availableBoxes = newState.map((value, index) => ({\n        value,\n        index\n      })).filter(_ref => {\n        let {\n          value\n        } = _ref;\n        return value === undefined;\n      });\n\n      if (winner || !availableBoxes.length) {\n        return prevState;\n      }\n\n      const randomIndex = getRandomNumberTo(availableBoxes.length - 1);\n      const superIndex = availableBoxes[randomIndex].index;\n      newState[superIndex] = \"O\";\n      return newState;\n    });\n  }, [winner]);\n  useEffect(() => {\n    if (isWinner(state, \"X\")) {\n      setWinner(\"The winner is X.\");\n    }\n\n    if (isWinner(state, \"O\")) {\n      setWinner(\"The winner is O.\");\n    }\n  }, [state, setWinner]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons_container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \"Computer VS Computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Player VS Computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Player VS Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid_container\",\n      children: state.map((value, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          onClick: createPCHandler(index),\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winner_container\",\n      children: winner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"K852DmdUNNzlM4qrs5cgpVZ2QC8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Button","Box","useCallback","App","current","setCurrent","winner","setWinner","state","setState","undefined","createPCHandler","index","prevState","newState","availableBoxes","map","value","filter","length","randomIndex","getRandomNumberTo","superIndex","isWinner"],"sources":["/Users/babulia/Desktop/уляна кодує/tic-tac-toe-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import { Routes, Route } from \"react-router-dom\";\nimport {} from \"../src/App.css\";\nimport Button from \"./components/Button/Button\";\nimport Box from \"./components/Box/Box\";\nimport { useCallback } from \"react\";\n\nfunction App() {\n  const [current, setCurrent] = useState(\"X\");\n  const [winner, setWinner] = useState();\n  const [state, setState] = useState([\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n  ]);\n\n  // const toggleCurrent = () =>\n  //   setCurrent((prevCurrent) => (prevCurrent === \"X\" ? \"O\" : \"X\"));\n\n  // const createPPHandler = (index) => () => {\n  //   setState((prevState) => {\n  //     if (winner || !state.includes(undefined)) {\n  //       return prevState;\n  //     }\n  //     const newState = [...prevState];\n  //     newState[index] = current;\n  //     toggleCurrent();\n  //     return newState;\n  //   });\n  // };\n\n  // const createCCHandler = () => () => {\n  //   setState((prevState) => {\n  //     const newState = [...prevState];\n  //     const availableBoxes = newState\n  //       .map((value, index) => ({ value, index }))\n  //       .filter(({ value }) => value === undefined);\n  //     if (winner || !availableBoxes.length) {\n  //       return prevState;\n  //     }\n  //     const randomIndex = getRandomNumberTo(availableBoxes.length - 1);\n  //     const superIndex = availableBoxes[randomIndex].index;\n  //     newState[superIndex] = current;\n  //     toggleCurrent();\n  //     return newState;\n  //   });\n  // };\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     createCCHandler()();\n  //   }, 500);\n  //   return () => clearInterval(interval);\n  // }, [createCCHandler]);\n\n  const createPCHandler = useCallback(\n    (index) => () => {\n      setState((prevState) => {\n        const newState = [...prevState];\n        newState[index] = \"X\";\n        const availableBoxes = newState\n          .map((value, index) => ({ value, index }))\n          .filter(({ value }) => value === undefined);\n        if (winner || !availableBoxes.length) {\n          return prevState;\n        }\n        const randomIndex = getRandomNumberTo(availableBoxes.length - 1);\n        const superIndex = availableBoxes[randomIndex].index;\n        newState[superIndex] = \"O\";\n        return newState;\n      });\n    },\n    [winner]\n  );\n\n  useEffect(() => {\n    if (isWinner(state, \"X\")) {\n      setWinner(\"The winner is X.\");\n    }\n    if (isWinner(state, \"O\")) {\n      setWinner(\"The winner is O.\");\n    }\n  }, [state, setWinner]);\n\n  return (\n    <div className=\"App\">\n      {/* <Routes>\n        <Route path=\"/\" element={<PlayerVsComputer />} />\n        <Route path=\"/\" element={<PlayerVsPlayer />} />\n        <Route path=\"/\" element={<ComputerVsComputer />} />\n      </Routes> */}\n      <div className=\"buttons_container\">\n        <Button>Computer VS Computer</Button>\n        <Button>Player VS Computer</Button>\n        <Button>Player VS Player</Button>\n      </div>\n      <div className=\"grid_container\">\n        {state.map((value, index) => (\n          <>\n            {/* \n            <Box onClick={createCCHandler()}>{value}</Box> */}\n            <Box onClick={createPCHandler(index)}>{value}</Box>\n          </>\n        ))}\n      </div>\n      <div className=\"winner_container\">{winner}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
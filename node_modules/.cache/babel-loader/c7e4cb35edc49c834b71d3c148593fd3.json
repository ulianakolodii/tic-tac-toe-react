{"ast":null,"code":"var _jsxFileName = \"/Users/babulia/Desktop/\\u0443\\u043B\\u044F\\u043D\\u0430 \\u043A\\u043E\\u0434\\u0443\\u0454/tic-tac-toe-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import {Routes, Route} from \"react-router-dom\";\n// import {PlayerVsComputer} from \"./routes\";\n// import {PlayerVsPlayer} from \"./routes\";\n// import {ComputerVsComputer} from \"./routes\";\n\nimport \"../src/App.css\";\nimport Button from \"./components/Button/Button\";\nimport Box from \"./components/Box/Box\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRandomNumberTo = function () {\n  let to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n  return Math.floor(Math.random() * to + 1) - 1;\n};\n\nconst matchDiagonalLeft = function (arr) {\n  let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"X\";\n  return arr[0] === value && arr[4] === value && arr[8] === value;\n};\n\nconst matchDiagonalRight = function (arr) {\n  let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"X\";\n  return arr[2] === value && arr[4] === value && arr[6] === value;\n};\n\nconst matchVertical = function (arr) {\n  let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"X\";\n  return arr[0] === value && arr[3] === value && arr[6] === value || arr[1] === value && arr[4] === value && arr[7] === value || arr[2] === value && arr[5] === value && arr[8] === value;\n};\n\nconst matchHorizontal = function (arr) {\n  let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"X\";\n  return arr[0] === value && arr[1] === value && arr[2] === value || arr[3] === value && arr[4] === value && arr[5] === value || arr[6] === value && arr[7] === value && arr[8] === value;\n};\n\nconst isWinner = (arr, value) => matchHorizontal(arr, value) || matchVertical(arr, value) || matchDiagonalLeft(arr, value) || matchDiagonalRight(arr, value);\n\nfunction App() {\n  _s();\n\n  const [current, setCurrent] = useState(\"X\");\n  const [winner, setWinner] = useState();\n  const [state, setState] = useState([undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined]);\n\n  const toggleCurrent = () => setCurrent(prevCurrent => prevCurrent === \"X\" ? \"O\" : \"X\"); // const createPPHandler = (index) => () => {\n  //   setState((prevState) => {\n  //     const newState = [...prevState];\n  //     newState[index] = current;\n  //     toggleCurrent();\n  //     return newState;\n  //   });\n  // };\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      createCCHandler();\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const createCCHandler = () => () => {\n    setState(prevState => {\n      const newState = [...prevState];\n      const availableBoxes = newState.map((value, index) => ({\n        value,\n        index\n      })).filter(_ref => {\n        let {\n          value\n        } = _ref;\n        return value === undefined;\n      });\n\n      if (winner || !availableBoxes.length) {\n        return prevState;\n      }\n\n      const randomIndex = getRandomNumberTo(availableBoxes.length - 1);\n      const superIndex = availableBoxes[randomIndex].index;\n      newState[superIndex] = current;\n      toggleCurrent();\n      return newState;\n    });\n  }; // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     createCCHandler()();\n  //   }, 500);\n  //   return () => clearInterval(interval);\n  // }, [createCCHandler]);\n\n\n  const createPCHandler = useCallback(index => () => {\n    setState(prevState => {\n      const newState = [...prevState];\n      newState[index] = \"X\";\n      const availableBoxes = newState.map((value, index) => ({\n        value,\n        index\n      })).filter(_ref2 => {\n        let {\n          value\n        } = _ref2;\n        return value === undefined;\n      });\n\n      if (winner || !availableBoxes.length) {\n        return prevState;\n      }\n\n      const randomIndex = getRandomNumberTo(availableBoxes.length - 1);\n      const superIndex = availableBoxes[randomIndex].index;\n      newState[superIndex] = \"O\";\n      return newState;\n    });\n  }, [winner]);\n  useEffect(() => {\n    if (isWinner(state, \"X\")) {\n      setWinner(\"The winner is X.\");\n    }\n\n    if (isWinner(state, \"O\")) {\n      setWinner(\"The winner is O.\");\n    }\n  }, [state, setWinner]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons_container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \"Computer VS Computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Player VS Computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Player VS Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid_container\",\n      children: state.map((value, index) =>\n      /*#__PURE__*/\n      // <Box onClick={createPPHandler(index)}>{value}</Box>\n      _jsxDEV(Box, {\n        onClick: createCCHandler(),\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this) // <Box onClick={createPCHandler(index)}>{value}</Box>\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winner_container\",\n      children: winner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XjJ5EF/ar2S42dkFPJ/0cBlP06g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Button","Box","useCallback","getRandomNumberTo","to","Math","floor","random","matchDiagonalLeft","arr","value","matchDiagonalRight","matchVertical","matchHorizontal","isWinner","App","current","setCurrent","winner","setWinner","state","setState","undefined","toggleCurrent","prevCurrent","interval","setInterval","createCCHandler","clearInterval","prevState","newState","availableBoxes","map","index","filter","length","randomIndex","superIndex","createPCHandler"],"sources":["/Users/babulia/Desktop/уляна кодує/tic-tac-toe-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import {Routes, Route} from \"react-router-dom\";\n// import {PlayerVsComputer} from \"./routes\";\n// import {PlayerVsPlayer} from \"./routes\";\n// import {ComputerVsComputer} from \"./routes\";\nimport {} from \"../src/App.css\";\nimport Button from \"./components/Button/Button\";\nimport Box from \"./components/Box/Box\";\nimport { useCallback } from \"react\";\nconst getRandomNumberTo = (to = 8) => Math.floor(Math.random() * to + 1) - 1;\n\nconst matchDiagonalLeft = (arr, value = \"X\") => {\n  return arr[0] === value && arr[4] === value && arr[8] === value;\n};\n\nconst matchDiagonalRight = (arr, value = \"X\") => {\n  return arr[2] === value && arr[4] === value && arr[6] === value;\n};\n\nconst matchVertical = (arr, value = \"X\") => {\n  return (\n    (arr[0] === value && arr[3] === value && arr[6] === value) ||\n    (arr[1] === value && arr[4] === value && arr[7] === value) ||\n    (arr[2] === value && arr[5] === value && arr[8] === value)\n  );\n};\n\nconst matchHorizontal = (arr, value = \"X\") => {\n  return (\n    (arr[0] === value && arr[1] === value && arr[2] === value) ||\n    (arr[3] === value && arr[4] === value && arr[5] === value) ||\n    (arr[6] === value && arr[7] === value && arr[8] === value)\n  );\n};\n\nconst isWinner = (arr, value) =>\n  matchHorizontal(arr, value) ||\n  matchVertical(arr, value) ||\n  matchDiagonalLeft(arr, value) ||\n  matchDiagonalRight(arr, value);\n\nfunction App() {\n  const [current, setCurrent] = useState(\"X\");\n  const [winner, setWinner] = useState();\n  const [state, setState] = useState([\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n  ]);\n\n  const toggleCurrent = () =>\n    setCurrent((prevCurrent) => (prevCurrent === \"X\" ? \"O\" : \"X\"));\n\n  // const createPPHandler = (index) => () => {\n  //   setState((prevState) => {\n  //     const newState = [...prevState];\n  //     newState[index] = current;\n  //     toggleCurrent();\n  //     return newState;\n  //   });\n  // };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      createCCHandler()\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const createCCHandler = () => () => {\n    setState((prevState) => {\n      const newState = [...prevState];\n      const availableBoxes = newState\n        .map((value, index) => ({ value, index }))\n        .filter(({ value }) => value === undefined);\n      if (winner || !availableBoxes.length) {\n        return prevState;\n      }\n      const randomIndex = getRandomNumberTo(availableBoxes.length - 1);\n      const superIndex = availableBoxes[randomIndex].index;\n      newState[superIndex] = current;\n      toggleCurrent();\n      return newState;\n    });\n  };\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     createCCHandler()();\n  //   }, 500);\n  //   return () => clearInterval(interval);\n  // }, [createCCHandler]);\n\n  const createPCHandler = useCallback(\n    (index) => () => {\n      setState((prevState) => {\n        const newState = [...prevState];\n        newState[index] = \"X\";\n        const availableBoxes = newState\n          .map((value, index) => ({ value, index }))\n          .filter(({ value }) => value === undefined);\n        if (winner || !availableBoxes.length) {\n          return prevState;\n        }\n        const randomIndex = getRandomNumberTo(availableBoxes.length - 1);\n        const superIndex = availableBoxes[randomIndex].index;\n        newState[superIndex] = \"O\";\n        return newState;\n      });\n    },\n    [winner]\n  );\n\n  useEffect(() => {\n    if (isWinner(state, \"X\")) {\n      setWinner(\"The winner is X.\");\n    }\n    if (isWinner(state, \"O\")) {\n      setWinner(\"The winner is O.\");\n    }\n  }, [state, setWinner]);\n\n  return (\n    <div className=\"App\">\n      {/* <Routes>\n        <Route path=\"/\" element={<PlayerVsComputer />}/>\n        <Route path=\"/\" element={<PlayerVsPlayer />}/>\n        <Route path=\"/\" element={<ComputerVsComputer />}/>\n      </Routes> */}\n      <div className=\"buttons_container\">\n        <Button>Computer VS Computer</Button>\n        <Button>Player VS Computer</Button>\n        <Button>Player VS Player</Button>\n      </div>\n      <div className=\"grid_container\">\n        {state.map((value, index) => (\n          // <Box onClick={createPPHandler(index)}>{value}</Box>\n          <Box onClick={createCCHandler()}>{value}</Box>\n          // <Box onClick={createPCHandler(index)}>{value}</Box>\n        ))}\n      </div>\n      <div className=\"winner_container\">{winner}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
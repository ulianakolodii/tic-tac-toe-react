{"ast":null,"code":"var _jsxFileName = \"/Users/babulia/Desktop/\\u0443\\u043B\\u044F\\u043D\\u0430 \\u043A\\u043E\\u0434\\u0443\\u0454/tic-tac-toe-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../src/App.css\";\nimport Button from \"./components/Button/Button\";\nimport Box from \"./components/Box/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst matchDiagonalLeft = function (arr) {\n  let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"X\";\n  return arr[1] === value && arr[5] === value && arr[9] === value;\n};\n\nconst matchDiagonalRight = function (arr) {\n  let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"X\";\n  return arr[3] === value && arr[1][1] === value && arr[2][0] === value;\n};\n\nconst matchVertical = function (arr, column) {\n  let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"X\";\n\n  for (let row = 0; row < 3; row++) {\n    if (arr[row][column] !== value) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst matchHorizontal = function (arr, row) {\n  let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"X\";\n  return arr[row].every(el => el === value);\n};\n\nconst isWinner = (arr, value) => matchHorizontal(arr, 0, value) || matchHorizontal(arr, 1, value) || matchHorizontal(arr, 2, value) || matchVertical(arr, 0, value) || matchVertical(arr, 1, value) || matchVertical(arr, 2, value) || matchDiagonalLeft(arr, value) || matchDiagonalRight(arr, value);\n\nfunction App() {\n  _s();\n\n  const [current, setCurrent] = useState(\"X\");\n  const [winner, setWinner] = useState();\n  const [state, setState] = useState([undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined]);\n\n  const toggleCurrent = () => setCurrent(prevCurrent => prevCurrent === \"X\" ? \"O\" : \"X\");\n\n  const createHandler = index => () => {\n    const magicFn = prevState => {\n      const newState = [...prevState];\n      newState[index] = current;\n      toggleCurrent();\n      return newState;\n    };\n\n    setState(magicFn);\n  };\n\n  useEffect(() => {\n    if (isWinner(state, \"X\")) {\n      setWinner(\"X\");\n    }\n\n    if (isWinner(state, \"O\")) {\n      setWinner(\"O\");\n    }\n  }, [state, setWinner]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons_container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \"Computer VS Computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Player VS Computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Player VS Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid_container\",\n      children: state.map((value, index) => /*#__PURE__*/_jsxDEV(Box, {\n        onClick: createHandler(index),\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: winner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"X9HANRDiTM6KfVBcGVtdlwfkFIE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Button","Box","matchDiagonalLeft","arr","value","matchDiagonalRight","matchVertical","column","row","matchHorizontal","every","el","isWinner","App","current","setCurrent","winner","setWinner","state","setState","undefined","toggleCurrent","prevCurrent","createHandler","index","magicFn","prevState","newState","map"],"sources":["/Users/babulia/Desktop/уляна кодує/tic-tac-toe-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {} from \"../src/App.css\";\nimport Button from \"./components/Button/Button\";\nimport Box from \"./components/Box/Box\";\n\nconst matchDiagonalLeft = (arr, value = \"X\") => {\n  return arr[1] === value && arr[5] === value && arr[9] === value;\n};\n\nconst matchDiagonalRight = (arr, value = \"X\") => {\n  return arr[3] === value && arr[1][1] === value && arr[2][0] === value;\n};\n\nconst matchVertical = (arr, column, value = \"X\") => {\n  for (let row = 0; row < 3; row++) {\n    if (arr[row][column] !== value) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst matchHorizontal = (arr, row, value = \"X\") =>\n  arr[row].every((el) => el === value);\n\nconst isWinner = (arr, value) =>\n  matchHorizontal(arr, 0, value) ||\n  matchHorizontal(arr, 1, value) ||\n  matchHorizontal(arr, 2, value) ||\n  matchVertical(arr, 0, value) ||\n  matchVertical(arr, 1, value) ||\n  matchVertical(arr, 2, value) ||\n  matchDiagonalLeft(arr, value) ||\n  matchDiagonalRight(arr, value);\n\nfunction App() {\n  const [current, setCurrent] = useState(\"X\");\n  const [winner, setWinner] = useState();\n  const [state, setState] = useState([\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n  ]);\n\n  const toggleCurrent = () =>\n    setCurrent((prevCurrent) => (prevCurrent === \"X\" ? \"O\" : \"X\"));\n\n  const createHandler = (index) => () => {\n    const magicFn = (prevState) => {\n      const newState = [...prevState];\n      newState[index] = current;\n      toggleCurrent();\n      return newState;\n    };\n    setState(magicFn);\n  };\n\n  useEffect(() => {\n    if (isWinner(state, \"X\")) {\n      setWinner(\"X\");\n    }\n    if (isWinner(state, \"O\")) {\n      setWinner(\"O\");\n    }\n  }, [state, setWinner]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"buttons_container\">\n        <Button>Computer VS Computer</Button>\n        <Button>Player VS Computer</Button>\n        <Button>Player VS Player</Button>\n      </div>\n      <div className=\"grid_container\">\n        {state.map((value, index) => (\n          <Box onClick={createHandler(index)}>{value}</Box>\n        ))}\n      </div>\n      <div>{winner}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}